# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://kedro.readthedocs.io/en/stable/data/data_catalog.html

{% set vmms = ["vmm_7m_vct","vmm_martins_simple","vmm_martins_simple_thrust","vmm_7m_vct_wind","vmm_simple","vmm_simple_wind"] %}
{% set regressions = ["vct","VCT_MDL_resistance","VCT_MDL_resistance_optimized_kappa","MDL_hull_inverse_dynamics","MDL_inverse_dynamics"] %}
{% set data_sources = ["MDL","Lake"] %}
{% set ships = ["wPCC","7m"] %}

## Regressions:
{% for ship in ships %}


### VCT data ###

{{ ship }}.df_VCT_all:
  type: PartitionedDataSet
  path: data/01_raw/{{ ship }}/df_VCT_all
  dataset: 
    type: pandas.CSVDataSet
    load_args:
      index_col: 0
    save_args:
      index: True
  filename_suffix: .csv

{{ ship }}.df_VCT_raw:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/{{ ship }}/df_VCT_raw.csv
  load_args:
    index_col: 0
  save_args:
    index: True

{{ ship }}.df_VCT:
  type: pandas.CSVDataSet
  filepath: data/02_intermediate/{{ ship }}/df_VCT.csv
  load_args:
    index_col: 0
  save_args:
    index: True

{{ ship }}.shipdict_base:
  type: vct_pipelines.ship_dict_dataset.ShipDictDataSet
  filepath: data/01_raw/{{ ship }}/{{ship}}.ship

{{ ship }}.ship_data:  # (From Lic.)
  type: yaml.YAMLDataSet
  filepath: data/01_raw/{{ ship }}/ship_data.yml

### Wind data ###
{{ ship }}.wind_data:
  type: pandas.CSVDataSet
  filepath: data/01_raw/{{ ship }}/wind_data.csv
  load_args:
    index_col: 0
  save_args:
    index: True

# shipdict with regressed parameters (hydrodynamic derivatives updated)
#{{ ship }}.ship_dict_from_regression:
#  type: IncrementalDataSet
#  path: data/05_model_input/ship_dict_from_regression/{{ship}}
#  dataset: vct_pipelines.ship_dict_dataset.ShipDictDataSet
#  filename_suffix: .ship
#
#{{ ship }}.derivatives:
#  type: IncrementalDataSet
#  path: data/05_model_input/derivatives/{{ship}}
#  dataset: yaml.YAMLDataSet
#  filename_suffix: .yml
#
#{{ ship }}.derivatives_std:
#  type: IncrementalDataSet
#  path: data/05_model_input/derivatives_std/{{ship}}
#  dataset: yaml.YAMLDataSet
#  filename_suffix: .yml

## Time series
{{ ship }}.time_series_:
  type: PartitionedDataSet
  path: data/01_raw/{{ ship }}/time_series_
  dataset:
    type: pandas.CSVDataSet
    load_args:
      index_col: 0
    save_args:
      index: True
  filename_suffix: .csv


{{ ship }}.time_series:
  type: PartitionedDataSet
  path: data/01_raw/{{ ship }}/time_series
  dataset:
    type: pandas.CSVDataSet
    load_args:
      index_col: 0
    save_args:
      index: True
  filename_suffix: .csv

{{ ship }}.time_series_rev:
  type: PartitionedDataSet
  path: data/02_intermediate/{{ ship }}/time_series_rev
  dataset:
    type: pandas.CSVDataSet
    load_args:
      index_col: 0
    save_args:
      index: True
  filename_suffix: .csv


{{ ship }}.units:
  type: yaml.YAMLDataSet
  filepath: data/01_raw/{{ ship }}/units.yml
  
{{ ship }}.time_series_meta_data:
  type: pandas.CSVDataSet
  filepath: data/01_raw/{{ ship }}/time_series_meta_data.csv
  load_args:
    index_col: 0
    encoding: 'utf-8'
  save_args:
    index: True
    encoding: 'utf-8'

{{ ship }}.time_series_preprocessed.ek:
  type: PartitionedDataSet
  path: data/03_primary/time_series_preprocessed/{{ ship }}/ek
  dataset:
    type: pandas.CSVDataSet
    load_args:
      index_col: 0
    save_args:
      index: True
  filename_suffix: .csv

{{ ship }}.time_series_preprocessed.ek_smooth:
  type: PartitionedDataSet
  path: data/03_primary/time_series_preprocessed/{{ ship }}/ek_smooth
  dataset:
    type: pandas.CSVDataSet
    load_args:
      index_col: 0
    save_args:
      index: True
  filename_suffix: .csv

{{ ship }}.simulation_no_wind:
  type: PartitionedDataSet
  path: data/07_model_output/{{ ship }}/simulation/no_wind
  dataset:
    type: pandas.CSVDataSet
    load_args:
      index_col: 0
    save_args:
      index: True
  filename_suffix: .csv

{{ ship }}.simulation_wind:
  type: PartitionedDataSet
  path: data/07_model_output/{{ ship }}/simulation/wind
  dataset:
    type: pandas.CSVDataSet
    load_args:
      index_col: 0
    save_args:
      index: True
  filename_suffix: .csv

{{ ship }}.modular.simulation_no_wind:
  type: PartitionedDataSet
  path: data/07_model_output/{{ ship }}/simulation/modular/no_wind
  dataset:
    type: pandas.CSVDataSet
    load_args:
      index_col: 0
    save_args:
      index: True
  filename_suffix: .csv

{{ ship }}.modular.simulation_wind:
  type: PartitionedDataSet
  path: data/07_model_output/{{ ship }}/simulation/modular/wind
  dataset:
    type: pandas.CSVDataSet
    load_args:
      index_col: 0
    save_args:
      index: True
  filename_suffix: .csv

{{ ship }}.simulation_MDL_vmm_abkowitz_diminished:
  type: PartitionedDataSet
  path: data/07_model_output/{{ ship }}/simulation/MDL_vmm_abkowitz_diminished
  dataset:
    type: pandas.CSVDataSet
    load_args:
      index_col: 0
    save_args:
      index: True
  filename_suffix: .csv



## Models
### Model templates (half finished models, where propeller are missing etc.):
{{ ship }}.base_models:
  type: PartitionedDataSet
  path: data/05_model_input/base_models
  dataset:
    #type: pickle.PickleDataSet
    #backend: dill
    type: phd.extras.datasets.model_dataset.ModularVesselSimulatorDataSet
  filename_suffix: .pkl

#main_model:
#  type: pickle.PickleDataSet
#  filepath: data/06_models/main_model.pkl
#  backend: dill
#
#{{ ship }}.main_model:
#  type: pickle.PickleDataSet
#  filepath: data/06_models/{{ ship }}.main_model.pkl
#  backend: dill
#
#  {% for vmm in vmms %}
#{{ ship }}.{{ vmm }}:
#  type: pickle.PickleDataSet
#  filepath: data/06_models/{{ ship }}.{{ vmm }}.pkl
#  backend: dill
#  {% endfor %}
#
### Complete models:
{{ ship }}.models_VCT:
  type: PartitionedDataSet
  path: data/06_models/{{ ship }}/models_VCT
  dataset:
    type: phd.extras.datasets.model_dataset.ModularVesselSimulatorDataSet
  filename_suffix: .pkl

{{ ship }}.models_VCT_MDL:
  type: PartitionedDataSet
  path: data/06_models/{{ ship }}/models_VCT_MDL
  dataset:
    type: phd.extras.datasets.model_dataset.ModularVesselSimulatorDataSet
  filename_suffix: .pkl

{{ ship }}.models:
  type: PartitionedDataSet
  path: data/06_models/{{ ship }}
  dataset:
    type: phd.extras.datasets.model_dataset.ModularVesselSimulatorDataSet
  filename_suffix: .pkl

#  {% for vmm in vmms %}
#    {% for model in regressions %}
#{{ ship }}.models.{{ vmm }}.{{ model }}:
#  type: pickle.PickleDataSet
#  filepath: data/06_models/{{ ship }}/{{ vmm }}.{{ model }}.pkl
#  backend: dill
#    {% endfor %}
#  {% endfor %}
#
### Resimulate
#  {% for data_source in data_sources %}
#    {% for vmm in vmms %}
#
#      {% for model in regressions %}
#
#{{ ship }}.{{ data_source }}.{{ vmm }}.{{ model }}.resimulate:
#  type: PartitionedDataSet
#  path: data/07_model_output/{{ ship }}/resimulation/{{ data_source }}/{{ vmm }}/{{ model }}
#  dataset:
#    type: pandas.CSVDataSet
#    load_args:
#      index_col: 0
#    save_args:
#      index: True
#  filename_suffix: .csv
#      
#      {% endfor %}
#    {% endfor %}
#  {% endfor %}
#
### Resimulate with autopilot
#  {% for data_source in ["Lake"] %}
#    {% for vmm in vmms %}
#
#      {% for model in regressions %}
#
#{{ ship }}.{{ data_source }}.{{ vmm }}.{{ model }}.resimulation_with_autopilot:
#  type: PartitionedDataSet
#  path: data/07_model_output/{{ ship }}/resimulation_with_autopilot/{{ data_source }}/{{ vmm }}/{{ model }}
#  dataset:
#    type: pandas.CSVDataSet
#    load_args:
#      index_col: 0
#    save_args:
#      index: True
#  filename_suffix: .csv
#      
#      {% endfor %}
#    {% endfor %}
#  {% endfor %}

## Predict
{{ ship }}.force_prediction_scores:
  type: pandas.CSVDataSet
  filepath: data/08_reporting/{{ ship }}.force_prediction_scores.csv
  load_args:
    index_col: 0
    encoding: 'utf-8'
  save_args:
    index: True
    encoding: 'utf-8'

{% endfor %}